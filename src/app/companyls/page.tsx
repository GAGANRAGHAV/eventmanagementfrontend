
/**
* This code was generated by v0 by Vercel.
* @see https://v0.dev/t/aMpq3cl34oc
* Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
*/

/** Add fonts into your Next.js project:

import { Libre_Franklin } from 'next/font/google'
import { Arimo } from 'next/font/google'

libre_franklin({
  subsets: ['latin'],
  display: 'swap',
})

arimo({
  subsets: ['latin'],
  display: 'swap',
})

To read more about using these font, please visit the Next.js documentation:
- App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
- Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
**/
"use client"

import { useState } from "react"
import Link from "next/link"
import { Card, CardHeader, CardTitle, CardDescription, CardContent } from "@/components/ui/card"
import { Button } from "@/components/ui/button"
import { Label } from "@/components/ui/label"
import { Input } from "@/components/ui/input"
import axios from 'axios';
import { useRouter } from "next/navigation"
import { Select, SelectTrigger, SelectValue, SelectContent, SelectGroup, SelectItem } from "@/components/ui/select"

export default function login() {
  const [isLoginForm, setIsLoginForm] = useState(true);
  const [name , setname] = useState('');
  const [email , setEmail] = useState('');
  const [password , setPassword] = useState('');

  const router = useRouter();

  const handleRegister  = async () => {

    try{

      const response  = await axios.post("https://eventmanagementbackend-o7k8.onrender.com/api/companyregister" , {
        name,email,password,
      });

      router.push('/companyf');

    }
    catch(err)
    {
      console.log('error registering:' , err);
    }
  }


  
  const handleLogin = async () => {
    try {
      const response = await axios.post("https://eventmanagementbackend-o7k8.onrender.com/api/companylogin", {
        email, password
      });
      localStorage.setItem("userId", response.data.user._id); // Save user ID in local storage

      router.push('/companyf');
      
    } catch (err) {
      console.log('error logging in:', err);
    }
  };



  return (
    <div className="flex flex-col min-h-dvh">
      <header className="px-4 lg:px-6 h-14 flex items-center bg-primary text-primary-foreground">
        <Link href="#" className="flex items-center justify-center" prefetch={false}>
          <MountainIcon className="size-6" />
          <span className="sr-only">Acme NGO</span>
        </Link>
      </header>
      <main className="flex-1 flex justify-center items-center px-4 md:px-6">
        <Card className="w-full max-w-md">
          <CardHeader className="space-y-1">
            <div className="flex justify-between items-center">
              <CardTitle className="text-2xl">{isLoginForm ? "Login" : "Sign Up"}</CardTitle>
              <Button variant={isLoginForm ? "secondary" : "default"} onClick={() => setIsLoginForm(!isLoginForm)}>
                {isLoginForm ? "Sign Up" : "Login"}
              </Button>
            </div>
            <CardDescription>
              {isLoginForm
                ? "Enter your credentials to access your account"
                : "Create a new account as an NGO or Volunteer"}
            </CardDescription>
          </CardHeader>
          <CardContent className="grid gap-4">
            {isLoginForm ? (
              <div className="grid gap-2">
                <div className="grid gap-2">
                  <Label htmlFor="email">Email</Label>
                  <Input id="email" type="text" placeholder="Enter your email or username" onChange={(e)=>setEmail(e.target.value)}  />
                </div>
                <div className="grid gap-2">
                  <Label htmlFor="password">Password</Label>
                  <Input id="password" type="password" placeholder="Enter your password" onChange={(e)=>setPassword(e.target.value)}  />
                </div>
                
                <Button type="submit" className="w-full" onClick={handleLogin}>
                  Login
                </Button>
              </div>
            ) : (
              <div className="grid gap-4">
                <div className="grid grid-cols-2 gap-4">
                  <div className="grid gap-2">
                    <Label htmlFor="name">Name</Label>
                    <Input id="name" type="text" placeholder="Enter your name" onChange={(e)=>setname(e.target.value)} />
                  </div>
                  <div className="grid gap-2">
                    <Label htmlFor="email">Email</Label>
                    <Input id="email" type="email" placeholder="Enter your email" onChange={(e)=>setEmail(e.target.value)}  />
                  </div>
                </div>
                <div className="grid gap-2">
                  <Label htmlFor="password">Password</Label>
                  <Input id="password" type="password" placeholder="Enter your password" onChange={(e)=>setPassword(e.target.value)}  />
                </div>
               
                <Button type="submit" className="w-full" onClick={handleRegister}>
                  Sign Up
                </Button>
              </div>
            )}
          </CardContent>
        </Card>
      </main>
    </div>
  )
}

function MountainIcon(props:any) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="m8 3 4 8 5-5 5 15H2L8 3z" />
    </svg>
  )
}
